{"version":3,"sources":["components/DrumPad/DrumPad.js","components/PadBank/PadBank.js","constants.js","components/App/App.js","serviceWorker.js","index.js"],"names":["DrumPad","state","padStyle","handleKeyPress","e","keyCode","_this","props","playSound","activatePad","power","setState","_this$props","clipId","keyTrigger","updateDisplay","sound","document","getElementById","currentTime","play","setTimeout","replace","addEventListener","this","removeEventListener","_this$props2","clip","react_default","a","createElement","id","onClick","className","concat","src","React","Component","PadBank","currentPadBank","padBank","map","drumObj","i","padBankArr","components_DrumPad_DrumPad","key","url","heaterKit","pianoKit","bankHeater","bankPiano","powerOn","powerOff","App","display","currentPadBankId","volume","powerControl","selectBank","_this$state","displayClipName","name","adjustVolume","target","value","Math","round","clearDisplay","_this$state2","powerChecked","clazzHeaterKit","clazzPianoKit","components_PadBank_PadBank","clipVolume","role","aria-label","type","min","max","step","onChange","defaultChecked","htmlFor","Boolean","window","location","hostname","match","ReactDOM","render","components_App_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.11355ace.chunk.js","sourcesContent":["import React from 'react';\n\nclass DrumPad extends React.Component {\n  state = {\n    padStyle: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keydown', this.handleKeyPress);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.handleKeyPress);\n  }\n\n  handleKeyPress = (e) => {\n    const { keyCode } = this.props;\n\n    if (e.keyCode === keyCode) {\n      this.playSound();\n    }\n  };\n\n  activatePad = () => {\n    const { padStyle } = this.state;\n    const { power } = this.props;\n\n    if (power) {\n      padStyle === 'active focus'\n        ? this.setState({\n            padStyle: '',\n          })\n        : this.setState({\n            padStyle: 'active focus',\n          });\n    }\n  };\n\n  playSound = () => {\n    const { clipId, keyTrigger, power, updateDisplay } = this.props;\n\n    if (power) {\n      const sound = document.getElementById(keyTrigger);\n      sound.currentTime = 0;\n      sound.play();\n      this.activatePad();\n      setTimeout(() => this.activatePad(), 100);\n      updateDisplay(clipId.replace(/-/g, ' '));\n    }\n  };\n\n  render() {\n    const { clipId, clip, keyTrigger } = this.props;\n\n    return (\n      <button\n        id={clipId}\n        onClick={this.playSound}\n        className={`drum-pad btn btn-info mx-2 my-2 ${this.state.padStyle}`}\n      >\n        <audio className=\"clip\" id={keyTrigger} src={clip}></audio>\n        {keyTrigger}\n      </button>\n    );\n  }\n}\n\nexport default DrumPad;\n","import React from 'react';\n\nimport DrumPad from '../DrumPad';\n\nclass PadBank extends React.Component {\n  render() {\n    const { currentPadBank, updateDisplay, power } = this.props;\n\n    const padBank = currentPadBank.map((drumObj, i, padBankArr) => {\n      return (\n        <DrumPad\n          key={`button-${padBankArr[i].id}`}\n          clipId={padBankArr[i].id}\n          clip={padBankArr[i].url}\n          keyTrigger={padBankArr[i].keyTrigger}\n          keyCode={padBankArr[i].keyCode}\n          updateDisplay={updateDisplay}\n          power={power}\n        />\n      );\n    });\n\n    return (\n      <div className=\"pad-bank card-deck m-3 text-center d-flex justify-content-center\">\n        {padBank}\n      </div>\n    );\n  }\n}\n\nexport default PadBank;\n","const appName = 'Drum Machine';\r\n\r\nconst heaterKit = 'Heater Kit';\r\nconst pianoKit = 'Piano Kit';\r\n\r\nconst bankHeater = [\r\n  {\r\n    keyCode: 81,\r\n    keyTrigger: 'Q',\r\n    id: 'Heater-1',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3',\r\n  },\r\n  {\r\n    keyCode: 87,\r\n    keyTrigger: 'W',\r\n    id: 'Heater-2',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3',\r\n  },\r\n  {\r\n    keyCode: 69,\r\n    keyTrigger: 'E',\r\n    id: 'Heater-3',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3',\r\n  },\r\n  {\r\n    keyCode: 65,\r\n    keyTrigger: 'A',\r\n    id: 'Heater-4',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3',\r\n  },\r\n  {\r\n    keyCode: 83,\r\n    keyTrigger: 'S',\r\n    id: 'Clap',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3',\r\n  },\r\n  {\r\n    keyCode: 68,\r\n    keyTrigger: 'D',\r\n    id: 'Open-HH',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3',\r\n  },\r\n  {\r\n    keyCode: 90,\r\n    keyTrigger: 'Z',\r\n    id: \"Kick-n'-Hat\",\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3',\r\n  },\r\n  {\r\n    keyCode: 88,\r\n    keyTrigger: 'X',\r\n    id: 'Kick',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3',\r\n  },\r\n  {\r\n    keyCode: 67,\r\n    keyTrigger: 'C',\r\n    id: 'Closed-HH',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3',\r\n  },\r\n];\r\n\r\nconst bankPiano = [\r\n  {\r\n    keyCode: 81,\r\n    keyTrigger: 'Q',\r\n    id: 'Chord-1',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_1.mp3',\r\n  },\r\n  {\r\n    keyCode: 87,\r\n    keyTrigger: 'W',\r\n    id: 'Chord-2',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_2.mp3',\r\n  },\r\n  {\r\n    keyCode: 69,\r\n    keyTrigger: 'E',\r\n    id: 'Chord-3',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_3.mp3',\r\n  },\r\n  {\r\n    keyCode: 65,\r\n    keyTrigger: 'A',\r\n    id: 'Shaker',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Give_us_a_light.mp3',\r\n  },\r\n  {\r\n    keyCode: 83,\r\n    keyTrigger: 'S',\r\n    id: 'Open-HH',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Dry_Ohh.mp3',\r\n  },\r\n  {\r\n    keyCode: 68,\r\n    keyTrigger: 'D',\r\n    id: 'Closed-HH',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Bld_H1.mp3',\r\n  },\r\n  {\r\n    keyCode: 90,\r\n    keyTrigger: 'Z',\r\n    id: 'Punchy-Kick',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/punchy_kick_1.mp3',\r\n  },\r\n  {\r\n    keyCode: 88,\r\n    keyTrigger: 'X',\r\n    id: 'Side-Stick',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/side_stick_1.mp3',\r\n  },\r\n  {\r\n    keyCode: 67,\r\n    keyTrigger: 'C',\r\n    id: 'Snare',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Brk_Snr.mp3',\r\n  },\r\n];\r\n\r\nconst powerOn = 'POWER ON';\r\nconst powerOff = 'POWER OFF';\r\n\r\nexport { appName, bankHeater, bankPiano, heaterKit, pianoKit, powerOn, powerOff };\r\n","import React from 'react';\n\nimport PadBank from '../PadBank';\nimport {\n  appName,\n  bankHeater,\n  bankPiano,\n  heaterKit,\n  pianoKit,\n  powerOn,\n  powerOff,\n} from '../../constants';\n\nimport './App.scss';\n\nclass App extends React.Component {\n  state = {\n    power: true,\n    display: '',\n    currentPadBank: bankHeater,\n    currentPadBankId: heaterKit,\n    volume: 0.4,\n  };\n\n  powerControl = () => {\n    const { power } = this.state;\n    this.setState({\n      power: !power,\n      display: power ? powerOff : powerOn,\n    });\n  };\n\n  selectBank = () => {\n    const { power, currentPadBankId } = this.state;\n    if (power) {\n      currentPadBankId === heaterKit\n        ? this.setState({\n            currentPadBank: bankPiano,\n            display: pianoKit,\n            currentPadBankId: pianoKit,\n          })\n        : this.setState({\n            currentPadBank: bankHeater,\n            display: heaterKit,\n            currentPadBankId: heaterKit,\n          });\n    }\n  };\n\n  displayClipName = (name) => {\n    const { power } = this.state;\n    if (power) {\n      this.setState({\n        display: name,\n      });\n    }\n  };\n\n  adjustVolume = (e) => {\n    const { power } = this.state;\n    if (power) {\n      this.setState({\n        volume: e.target.value,\n        display: 'Volume: ' + Math.round(e.target.value * 100),\n      });\n      setTimeout(() => this.clearDisplay(), 1000);\n    }\n  };\n\n  clearDisplay = () => {\n    this.setState({\n      display: '',\n    });\n  };\n\n  render() {\n    const { power, volume, currentPadBank, display } = this.state;\n\n    const powerChecked = power ? 'checked' : null;\n\n    const clazzHeaterKit =\n      this.state.currentPadBankId === heaterKit\n        ? 'btn-info'\n        : 'btn-outline-secondary';\n\n    const clazzPianoKit =\n      this.state.currentPadBankId === pianoKit\n        ? 'btn-info'\n        : 'btn-outline-secondary';\n\n    return (\n      <div id=\"drum-machine\" className=\"cover-container d-flex w-100 h-100 p-3\">\n        <div className=\"border rounded shadow-sm \">\n          <div className=\"logo-block d-flex justify-content-center m-3\">\n            <i className=\"logo fas fa-drum\"></i> {appName}\n          </div>\n\n          <PadBank\n            power={power}\n            updateDisplay={this.displayClipName}\n            clipVolume={volume}\n            currentPadBank={currentPadBank}\n          />\n\n          <div className=\"d-flex justify-content-center m-3\">\n            <div className=\"form-control display\" id=\"display\">\n              {display}\n            </div>\n          </div>\n\n          <div className=\"d-flex justify-content-center m-3\">\n            <div className=\"btn-group\" role=\"group\" aria-label=\"Kits\">\n              <button\n                type=\"button\"\n                className={`btn ${clazzHeaterKit}`}\n                onClick={this.selectBank}\n              >\n                {heaterKit}\n              </button>\n              <button\n                type=\"button\"\n                className={`btn ${clazzPianoKit}`}\n                onClick={this.selectBank}\n              >\n                {pianoKit}\n              </button>\n            </div>\n          </div>\n\n          <div className=\"d-flex justify-content-center m-3\">\n            <div className=\"volume-slider\">\n              <input\n                type=\"range\"\n                min=\"0\"\n                max=\"1\"\n                step=\"0.01\"\n                value={volume}\n                onChange={this.adjustVolume}\n                className=\"custom-range\"\n              />\n            </div>\n          </div>\n\n          <div className=\"d-flex justify-content-center m-3\">\n            <div className=\"custom-control custom-switch\">\n              <input\n                type=\"checkbox\"\n                className=\"custom-control-input\"\n                id=\"powerSwitch\"\n                onClick={this.powerControl}\n                defaultChecked={powerChecked}\n              />\n              <label className=\"custom-control-label\" htmlFor=\"powerSwitch\">\n                Power\n              </label>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}