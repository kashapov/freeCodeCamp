{"version":3,"sources":["reducers/rootReducer.js","store/store.js","actions/actionTypes.js","components/Display.js","components/Button.js","actions/actions.js","components/Keypad.js","Calculator.js","selectors/Selectors.js","index.js"],"names":["initialState","display","prevOp","accumulated","history","createStore","state","action","type","updateDisplay","payload","includes","input","length","operation","slice","states","maths","math","toString","window","__REDUX_DEVTOOLS_EXTENSION__","Display","this","props","id","className","Component","ButtonSmall","handleClicks","e","clear","subtract","multiply","divide","button","equal","add","value","onClick","connect","dispatch","Keypad","Button","Calculator","store","getDisplay","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eebc7a78.chunk.js","sourcesContent":["import * as math from 'mathjs';\r\n\r\nimport {\r\n  ADD,\r\n  SUBTRACT,\r\n  MULTIPLY,\r\n  DIVIDE,\r\n  UPDATE,\r\n  CLEAR,\r\n  EQUAL,\r\n} from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n  display: '0',\r\n  prevOp: '',\r\n  accumulated: '0',\r\n  history: '0',\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case UPDATE: {\r\n      const updateDisplay = action.payload;\r\n\r\n      if (\r\n        (state.display.includes('.') && updateDisplay.input === '.') ||\r\n        state.display.length > 8\r\n      ) {\r\n        return {\r\n          ...state,\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          display:\r\n            (state.display === '0' && updateDisplay.input !== '.') ||\r\n            state.prevOp === 'operator'\r\n              ? updateDisplay.input\r\n              : state.display + updateDisplay.input,\r\n          prevOp: updateDisplay.operation,\r\n        };\r\n      }\r\n    }\r\n\r\n    case ADD: {\r\n      const history = () =>\r\n        state.prevOp === 'operator'\r\n          ? state.history.slice(0, state.history.length - 4)\r\n          : state.history;\r\n\r\n      return {\r\n        ...state,\r\n        display: state.display,\r\n        history:\r\n          state.history === '0' && state.accumulated === '0'\r\n            ? state.display + ' + '\r\n            : state.accumulated !== '0'\r\n            ? state.accumulated + ' + '\r\n            : history() + state.display + ' + ',\r\n        prevOp: 'operator',\r\n      };\r\n    }\r\n\r\n    case SUBTRACT: {\r\n      const history = () =>\r\n        state.prevOp === 'operator'\r\n          ? state.history.slice(0, state.history.length - 4)\r\n          : state.history;\r\n\r\n      return {\r\n        ...state,\r\n        display: state.display,\r\n        history:\r\n          state.history === '0' && state.accumulated === '0'\r\n            ? state.display + ' - '\r\n            : state.accumulated !== '0'\r\n            ? state.accumulated + ' - '\r\n            : history() + state.display + ' - ',\r\n        prevOp: 'operator',\r\n      };\r\n    }\r\n\r\n    case MULTIPLY: {\r\n      const history = () =>\r\n        state.prevOp === 'operator'\r\n          ? state.history.slice(0, state.history.length - 4)\r\n          : state.history;\r\n\r\n      return {\r\n        ...state,\r\n        display: state.display,\r\n        history:\r\n          state.history === '0' && state.accumulated === '0'\r\n            ? state.display + ' * '\r\n            : state.accumulated !== '0'\r\n            ? state.accumulated + ' * '\r\n            : history() + state.display + ' * ',\r\n        prevOp: 'operator',\r\n      };\r\n    }\r\n\r\n    case DIVIDE: {\r\n      const history = () =>\r\n        state.prevOp === 'operator'\r\n          ? state.history.slice(0, state.history.length - 4)\r\n          : state.history;\r\n\r\n      return {\r\n        ...state,\r\n        display: state.display,\r\n        history:\r\n          state.history === '0' && state.accumulated === '0'\r\n            ? state.display + ' / '\r\n            : state.accumulated !== '0'\r\n            ? state.accumulated + ' / '\r\n            : history() + state.display + ' / ',\r\n        prevOp: 'operator',\r\n      };\r\n    }\r\n\r\n    case CLEAR: {\r\n      return {\r\n        display: '0',\r\n        prevOp: '',\r\n        accumulated: '0',\r\n        history: '0',\r\n      };\r\n    }\r\n\r\n    case EQUAL: {\r\n      let states = state.history + state.display;\r\n      let maths = math.evaluate(states);\r\n\r\n      if (state.prevOp === 'equal') {\r\n        return {\r\n          ...state,\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          history: math.round(maths, 4).toString(),\r\n          display: math.round(maths, 4).toString(),\r\n          accumulated: maths.toString(),\r\n          prevOp: 'equal',\r\n        };\r\n      }\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { createStore } from 'redux';\r\n\r\nimport rootReducer from '../reducers/rootReducer';\r\n\r\nexport default createStore(\r\n  rootReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n","export const ADD = 'ADD';\r\nexport const SUBTRACT = 'SUBTRACT';\r\nexport const MULTIPLY = 'MULTIPLY';\r\nexport const DIVIDE = 'DIVIDE';\r\n\r\nexport const UPDATE = 'UPDATE';\r\nexport const CLEAR = 'CLEAR';\r\nexport const EQUAL = 'EQUAL';\r\n","import React, { Component } from 'react';\r\n\r\nimport '../css/display.css';\r\n\r\nclass Display extends Component {\r\n  render() {\r\n    const { display } = this.props;\r\n\r\n    return (\r\n      <div id=\"display\" className=\"lcd-screen\">\r\n        {display}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Display;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport {\r\n  updateDisplay,\r\n  clearDisplay,\r\n  subtraction,\r\n  multiplication,\r\n  division,\r\n  equal,\r\n  addition,\r\n} from '../actions/actions';\r\n\r\nimport '../css/button.css';\r\n\r\nclass ButtonSmall extends Component {\r\n  handleClicks = (e) => {\r\n    const {\r\n      id,\r\n      clear,\r\n      display,\r\n      subtract,\r\n      multiply,\r\n      divide,\r\n      button,\r\n      updateDisplay,\r\n      equal,\r\n      add,\r\n    } = this.props;\r\n\r\n    if (id === 'clear') {\r\n      clear();\r\n    } else if (id === 'add') {\r\n      add(button);\r\n    } else if (id === 'subtract') {\r\n      subtract(display);\r\n    } else if (id === 'multiply') {\r\n      multiply(display);\r\n    } else if (id === 'divide') {\r\n      divide(display);\r\n    } else if (id === 'equals') {\r\n      equal(display);\r\n    } else {\r\n      updateDisplay(button);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { id, value, button, className } = this.props;\r\n\r\n    return (\r\n      <button\r\n        type=\"button\"\r\n        id={id}\r\n        value={value}\r\n        onClick={this.handleClicks}\r\n        className={`keypad__btn ${className}`}\r\n      >\r\n        {button}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  updateDisplay: (display) => dispatch(updateDisplay(display)),\r\n  subtract: (display) => dispatch(subtraction(display)),\r\n  multiply: (display) => dispatch(multiplication(display)),\r\n  divide: (display) => dispatch(division(display)),\r\n  clear: (display) => dispatch(clearDisplay(display)),\r\n  equal: (display) => dispatch(equal(display)),\r\n  add: (display) => dispatch(addition(display)),\r\n});\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(ButtonSmall);\r\n","import {\r\n  ADD,\r\n  UPDATE,\r\n  CLEAR,\r\n  EQUAL,\r\n  SUBTRACT,\r\n  MULTIPLY,\r\n  DIVIDE,\r\n} from './actionTypes';\r\n\r\nexport const addition = (content) => ({\r\n  type: ADD,\r\n  payload: {\r\n    operation: 'operator',\r\n  },\r\n});\r\n\r\nexport const subtraction = (content) => ({\r\n  type: SUBTRACT,\r\n  payload: {\r\n    operation: 'operator',\r\n  },\r\n});\r\n\r\nexport const updateDisplay = (content) => ({\r\n  type: UPDATE,\r\n  payload: {\r\n    input: content,\r\n    operation: 'num',\r\n  },\r\n});\r\n\r\nexport const multiplication = (content) => ({\r\n  type: MULTIPLY,\r\n  payload: {\r\n    operation: 'operator',\r\n  },\r\n});\r\n\r\nexport const division = (content) => ({\r\n  type: DIVIDE,\r\n  payload: {\r\n    operation: 'operator',\r\n  },\r\n});\r\n\r\nexport const clearDisplay = (content) => ({\r\n  type: CLEAR,\r\n  payload: {\r\n    operation: 'clear',\r\n  },\r\n});\r\n\r\nexport const equal = (content) => ({\r\n  type: EQUAL,\r\n  payload: {\r\n    operation: 'equal',\r\n  },\r\n});\r\n","import React, { Component } from 'react';\r\n\r\nimport Button from './Button';\r\n\r\nimport '../css/keypad.css';\r\n\r\nclass Keypad extends Component {\r\n  render() {\r\n    const { display } = this.props;\r\n\r\n    return (\r\n      <div className=\"keypad\">\r\n        <Button\r\n          button={'AC'}\r\n          id={'clear'}\r\n          type={'clear'}\r\n          className=\"all-clear\"\r\n        />\r\n        <Button\r\n          button={<>&divide;</>}\r\n          id={'divide'}\r\n          display={display}\r\n          type={'operator'}\r\n          className=\"operator\"\r\n        />\r\n        <Button\r\n          button={<>&times;</>}\r\n          id={'multiply'}\r\n          display={display}\r\n          type={'operator'}\r\n          className=\"operator\"\r\n        />\r\n        <Button\r\n          button={'-'}\r\n          id={'subtract'}\r\n          display={display}\r\n          type={'operator'}\r\n          className=\"operator\"\r\n        />\r\n        <Button button={'7'} id={'seven'} value={'7'} type={'num'} />\r\n        <Button button={'8'} id={'eight'} value={'8'} type={'num'} />\r\n        <Button button={'9'} id={'nine'} value={'9'} type={'num'} />\r\n\r\n        <Button button={'4'} id={'four'} value={'4'} type={'num'} />\r\n        <Button button={'5'} id={'five'} value={'5'} type={'num'} />\r\n        <Button button={'6'} id={'six'} value={'6'} type={'num'} />\r\n\r\n        <Button button={'1'} id={'one'} value={'1'} type={'num'} />\r\n        <Button button={'2'} id={'two'} value={'2'} type={'num'} />\r\n        <Button button={'3'} id={'three'} value={'3'} type={'num'} />\r\n\r\n        <Button button={'0'} id={'zero'} type={'num'} className=\"zero-sign\" />\r\n        <Button\r\n          button={'.'}\r\n          id={'decimal'}\r\n          value={'.'}\r\n          display={display}\r\n          type={'decimal'}\r\n        />\r\n        <Button\r\n          button={'+'}\r\n          id={'add'}\r\n          display={display}\r\n          type={'operator'}\r\n          className=\"addition-sign\"\r\n        />\r\n        <Button\r\n          button={'='}\r\n          id={'equals'}\r\n          display={display}\r\n          type={'operator'}\r\n          className=\"equal-sign\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Keypad;\r\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport Display from './components/Display';\nimport Keypad from './components/Keypad';\nimport { getDisplay } from './selectors/Selectors';\n\nimport './css/calculator.css';\n\nclass Calculator extends Component {\n  render() {\n    const { display } = this.props;\n\n    return (\n      <div className=\"calculator-body\">\n        <div className=\"display-block\">\n          <Display display={display} />\n        </div>\n        <div className=\"keypad-block\">\n          <Keypad display={display} />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const displayValue = getDisplay(state);\n  return {\n    display: displayValue,\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  null\n)(Calculator);\n","export const getDisplay = (store) => store.display;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport store from './store/store';\nimport Calculator from './Calculator';\n\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <Calculator />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}