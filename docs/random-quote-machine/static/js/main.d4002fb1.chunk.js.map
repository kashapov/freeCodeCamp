{"version":3,"sources":["reducers/quotesReducer.js","constants/index.js","reducers/index.js","store.js","config.js","actions/index.js","components/Quote.js","components/App.js","index.js"],"names":["initialState","quote","author","content","isFetching","errorMessage","colors","combineReducers","quotes","state","arguments","length","undefined","action","type","Object","objectSpread","payload","message","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","getRandomQuoteApiUrl","concat","getQuote","dispatch","axios","get","then","response","data","catch","error","Error","_ref","react_default","a","createElement","Spinner","className","Button","_ref2","id","onClick","title","backgroundColor","style","TwitterShare","_ref3","Fragment","href","target","rel","QuoteBox","_ref4","randomColor","getNewQuote","color","Quote_TwitterShare","Quote_Button","Quote","_this","props","this","_this$props","randomColors","_this$props$quote","Math","floor","random","hasData","Quote_Error","spinner","Quote_Spinner","quoteBox","Quote_QuoteBox","PureComponent","connect","bindActionCreators","App","es","src_components_Quote","Component","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.d4002fb1.chunk.js","sourcesContent":["import {\r\n  GET_QUOTE_REQUEST,\r\n  GET_QUOTE_SUCCESS,\r\n  GET_QUOTE_FAILURE,\r\n  BG_COLORS\r\n} from \"../constants\";\r\n\r\nconst initialState = {\r\n  quote: {\r\n    author: \"\",\r\n    content: \"\"\r\n  },\r\n  isFetching: true,\r\n  errorMessage: \"\",\r\n  colors: BG_COLORS\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_QUOTE_REQUEST:\r\n      return { ...state, isFetching: true };\r\n\r\n    case GET_QUOTE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        quote: {\r\n          author: action.payload.author,\r\n          content: action.payload.content\r\n        }\r\n      };\r\n\r\n    case GET_QUOTE_FAILURE:\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        errorMessage: action.payload.message\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","export const GET_QUOTE_REQUEST = \"GET_QUOTE_REQUEST\";\r\nexport const GET_QUOTE_SUCCESS = \"GET_QUOTE_SUCCESS\";\r\nexport const GET_QUOTE_FAILURE = \"GET_QUOTE_FAILURE\";\r\n\r\nexport const APP_NAME = \"Random Quote Machine\";\r\n\r\nexport const BG_COLORS = [\r\n  \"#16a085\",\r\n  \"#27ae60\",\r\n  \"#2c3e50\",\r\n  \"#f39c12\",\r\n  \"#e74c3c\",\r\n  \"#9b59b6\",\r\n  \"#FB6964\",\r\n  \"#342224\",\r\n  \"#472E32\",\r\n  \"#BDBB99\",\r\n  \"#77B1A9\",\r\n  \"#73A857\"\r\n];\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport quotesReducer from \"./quotesReducer\";\r\n\r\nexport default combineReducers({\r\n  quotes: quotesReducer\r\n});\r\n","import thunk from \"redux-thunk\";\r\nimport { applyMiddleware, createStore, compose } from \"redux\";\r\n\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","export const ApiBaseUrl = \"https://api.quotable.io\";\r\nexport const getRandomQuoteApiUrl = `${ApiBaseUrl}/random`;\r\n\r\nexport default {\r\n  ApiBaseUrl,\r\n  getRandomQuoteApiUrl\r\n};\r\n","import axios from \"axios\";\r\n\r\nimport {\r\n  GET_QUOTE_REQUEST,\r\n  GET_QUOTE_SUCCESS,\r\n  GET_QUOTE_FAILURE\r\n} from \"../constants\";\r\nimport { getRandomQuoteApiUrl } from \"../config\";\r\n\r\nexport const getQuote = () => dispatch => {\r\n  dispatch({ type: GET_QUOTE_REQUEST });\r\n\r\n  axios\r\n    .get(`${getRandomQuoteApiUrl}`)\r\n    .then(response =>\r\n      dispatch({ type: GET_QUOTE_SUCCESS, payload: response.data })\r\n    )\r\n    .catch(error => dispatch({ type: GET_QUOTE_FAILURE, payload: error }));\r\n};\r\n","import React, { PureComponent } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { getQuote } from \"../actions/index\";\r\n\r\nimport \"./Quote.css\";\r\n\r\nconst Error = ({ errorMessage }) => {\r\n  return <span>{errorMessage}</span>;\r\n};\r\n\r\nconst Spinner = () => {\r\n  return <div className=\"loader\">Loading...</div>;\r\n};\r\n\r\nconst Button = ({ id, onClick, title, backgroundColor }) => {\r\n  return (\r\n    <button\r\n      id={id}\r\n      className=\"box__btn btn__new-quote\"\r\n      onClick={onClick}\r\n      style={{ backgroundColor: backgroundColor }}\r\n    >\r\n      {title}\r\n    </button>\r\n  );\r\n};\r\n\r\nconst TwitterShare = ({ quote, author }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <a\r\n        href={`https://twitter.com/intent/tweet?text= ${quote} ${author}`}\r\n        target=\"_blank\"\r\n        title=\"Post this quote on twitter!\"\r\n        id=\"tweet-quote\"\r\n        className=\"box__btn\"\r\n        rel=\"noopener noreferrer\"\r\n        style={{ backgroundColor: \"#00ACEE\" }}\r\n      >\r\n        <i className=\"fab fa-twitter twitter-icon\" /> Tweet\r\n      </a>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst QuoteBox = ({ quote, author, randomColor, getNewQuote }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"box__quote-text\">\r\n        <i className=\"fa fa-quote-left\" style={{ color: randomColor }} />\r\n        <span id=\"text\" style={{ color: randomColor }}>\r\n          {quote}\r\n        </span>\r\n        <i className=\"fa fa-quote-right\" style={{ color: randomColor }} />\r\n      </div>\r\n      <div className=\"box__quote-author\" style={{ color: randomColor }}>\r\n        -<span id=\"author\"> {author}</span>\r\n      </div>\r\n      <div className=\"box__buttons-block\">\r\n        <TwitterShare quote={quote} author={author} />\r\n        <Button\r\n          id=\"new-quote\"\r\n          onClick={getNewQuote}\r\n          title=\"NEW QUOTE\"\r\n          backgroundColor={randomColor}\r\n        />\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nclass Quote extends PureComponent {\r\n  componentDidMount() {\r\n    this.getNewQuote();\r\n  }\r\n\r\n  getNewQuote = () => {\r\n    this.props.getQuote();\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      isFetching,\r\n      errorMessage,\r\n      randomColors,\r\n      quote: { content, author }\r\n    } = this.props;\r\n\r\n    const randomColor = randomColors[Math.floor(Math.random() * 11)];\r\n\r\n    const hasData = !(isFetching || errorMessage);\r\n\r\n    const error = errorMessage ? <Error errorMessage={errorMessage} /> : null;\r\n    const spinner = isFetching ? <Spinner /> : null;\r\n    const quoteBox = hasData ? (\r\n      <QuoteBox\r\n        quote={content}\r\n        author={author}\r\n        randomColor={randomColor}\r\n        getNewQuote={this.getNewQuote}\r\n      />\r\n    ) : null;\r\n\r\n    return (\r\n      <div className=\"wrapper\" style={{ backgroundColor: randomColor }}>\r\n        <div id=\"quote-box\" className=\"box\">\r\n          {error}\r\n          {spinner}\r\n          {quoteBox}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nQuote.propTypes = {\r\n  quote: PropTypes.object.isRequired,\r\n  randomColors: PropTypes.array.isRequired,\r\n  isFetching: PropTypes.bool.isRequired,\r\n  errorMessage: PropTypes.string.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isFetching: state.quotes.isFetching,\r\n  errorMessage: state.quotes.errorMessage,\r\n  randomColors: state.quotes.colors,\r\n  quote: state.quotes.quote\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators(\r\n    {\r\n      getQuote\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Quote);\r\n","import React, { Component } from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"../store\";\r\nimport Quote from \"./Quote\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <Quote />\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport { render } from \"react-dom\";\r\n\r\nimport App from \"./components/App\";\r\n\r\nrender(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}